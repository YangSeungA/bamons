<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <!-- Sample Job -->
    <batch:job id="sampleJob">
        <batch:step id="step1" next="step2">
            <batch:tasklet>
                <batch:chunk reader="sampleItemReader" writer="sampleItemWriter" commit-interval="100" skip-limit="100" retry-limit="50">
                    <batch:retryable-exception-classes>
                        <batch:include class="org.springframework.dao.DataAccessResourceFailureException" />
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException" />
                        <batch:include class="org.springframework.batch.core.step.skip.NonSkippableReadException" />
                        <batch:include class="java.net.SocketException" />
                        <batch:include class="java.io.EOFException" />
                    </batch:retryable-exception-classes>
                    <batch:skippable-exception-classes>
                        <batch:include class="org.springframework.dao.DataIntegrityViolationException"/>
                    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="step2">
            <tasklet ref="step1Tasklet" />
        </batch:step>
        <batch:listeners>
            <batch:listener ref="monitoringJobListener"/>
        </batch:listeners>
    </batch:job>

    <!-- Tasklet bean -->
    <bean id="step1Tasklet" class="bamons.process.batch.support.SampleTasklet" scope="step">
        <property name="targetDate" value="#{jobParameters['targetDate']}"/>
    </bean>

    <!-- Item Reader -->
    <bean id="sampleItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="sql">
            <value>
                <![CDATA[
                    SELECT code, name, target_date AS targetDate FROM SAMPLE_TEMP WHERE target_date = '#{jobParameters['targetDate']}'
                ]]>
            </value>
        </property>
        <property name="rowMapper">
            <bean class="bamons.process.batch.support.SampleRawDataRowMapper" />
        </property>
    </bean>

    <!-- Item Writer -->
    <bean id="sampleItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
                <![CDATA[
                    INSERT INTO SAMPLE (code, name, target_date) VALUES (:code, :name, :targetDate)
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>

    <!-- Email Notifier -->
    <bean id="monitoringJobListener"  class="bamons.process.monitoring.service.listener.MonitoringExecutionListener">
        <property name="monitoringNotifier" ref="monitoringNotifier"/>
    </bean>

    <bean id="monitoringNotifier" class="bamons.process.monitoring.service.listener.EmailMonitoringNotifier" />

</beans>